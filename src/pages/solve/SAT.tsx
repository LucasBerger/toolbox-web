import Head from "next/head";
import React, {useState} from "react";
import type { NextPage } from "next";
import { Container } from "../../components/Container";
import { Main } from "../../components/Main";
import { SolverTitle } from "../../components/solvers/SolverTitle";
import { TextArea } from "../../components/solvers/SAT/TextArea";
import { Help } from "../../components/solvers/SAT/Help";
import { InputButtonPanel } from "../../components/solvers/buttons/InputButtonPanel";
import { ProgressHandler } from "../../components/solvers/ProgressHandler";
import { Text, Divider } from "@chakra-ui/react";
import { DimacsParser } from "../../converter/dimacs/DimacsParser";
import { LogExpParser } from "../../converter/dimacs/LogExpParser";

const SAT: NextPage = () => {
  const logExpParser = new LogExpParser();
  const dimacsParser = new DimacsParser();

  const [logExpString, setLogExpString] = useState("");
  const [errorString, setErrorString] = useState("");

  return (
    <Container minHeight="100vh">
      <Head>
        <title>ProvideQ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        {/* TODO: replace favicon */}
      </Head>
      <SolverTitle title="SAT Solver" text="For a given Boolean formula, this algorithm checks if there exists an interpretation that satisfies it." />
      <Main mb="20vh">
          <TextArea problemString={logExpString}
                    setProblemString={(value) => {
                        setLogExpString(value);

                        try {
                            logExpParser.parse(value.toString());
                            setErrorString('');
                        } catch (e: any) {
                            setErrorString(e.message);
                        }
                    }}/>
          <Text backgroundColor="tomato" >{errorString}</Text>
        <InputButtonPanel
            helpBody={<Help/>}
            problemString={logExpString}
            setProblemString={setLogExpString}
            uploadString={(str: string) => {
                try {
                    return dimacsParser.parse(str);
                } catch (e: any) {
                    return e.message;
                }
            }}
            downloadString={(str: string) => {
                let ret = '';
                try {
                    ret = logExpParser.parse(str);
                    setErrorString('');
                } catch (e: any) {
                    setErrorString(e.message);
                }
                return ret;
            }}
        />
        <Divider />
        <ProgressHandler />
      </Main>
    </Container>
  );
};

export default SAT;
