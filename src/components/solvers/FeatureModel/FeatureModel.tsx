import { Divider, Text, Textarea } from "@chakra-ui/react";
import Head from "next/head";
import React, { ChangeEvent, useState } from "react";
import { Container } from "../../Container";
import { Main } from "../../Main";
import { ProgressHandler } from "../ProgressHandler";
import { SolverTitle } from "../SolverTitle";
export interface FeatureModelProperties {
    type: string;
}

export const FeatureModel = (props: FeatureModelProperties) => {
    const [featureModel, setFeatureModel] = useState<any>(null);
    const [errorString, setErrorString] = useState("");

    function onTextAreaChange(event: ChangeEvent<HTMLTextAreaElement>): void {
        const featureModelUVL = event.target.value;
        setFeatureModel(featureModelUVL);

        try {
            setFeatureModel(featureModelUVL);

            setErrorString('');
        } catch (e: any) {
            setErrorString(e.message);
        }
    }

    return (
        <Container minHeight="100vh">
            <Head>
                <title>ProvideQ</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
                {/* TODO: replace favicon */}
            </Head>
            <SolverTitle title="Feature Model Anomaly Solver"
                         text="For a tree of features with cross tree constraints, the solver detects anomolies."/>
            <Main mb="20vh">

                <Textarea placeholder="Enter your feature model in GML format"
                          value={featureModel}
                          minHeight="10rem"
                          isInvalid={errorString != ""}
                          onChange={onTextAreaChange}/>

                <Text backgroundColor="tomato">{errorString}</Text>

                <Divider/>
                <ProgressHandler
                    problemType={`featureModel/${props.type}`}
                    problemInput={featureModel}/>
            </Main>
        </Container>
    );
};